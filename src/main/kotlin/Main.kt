fun main() {
    startGame()
//    showMenu()
}

fun startGame() {
    println("Добро пожаловать в Dragon Game!")
    println("Начало игры !")

    // Меню сделаем

    print("Введите имя игрока: ")
    val name = readlnOrNull() ?: "NO Name"
    print("Введите здровье игрока: ")
    val health = readlnOrNull()?.toInt() ?: 100

    val player = Player(name, health)

//    println("Игрок создан!")
    println("Здоровье игрока ${player.getName()} - ${health}%!")
    println("${player.getAttack()} - урон игрока!")
    println("${player.getDeffese()} - защита игрока!")
    println("=========================================")


    print("Введите здровье монстра: ")
    val healthMonster = readlnOrNull()?.toInt() ?: 100 // найти как проверять, что ввел именно число !

    val monster = Monster(name = "Смауг", healthMonster)

    println("Монстр создан!")
    println("Имя монстра - ${monster.name}")
    println("Здоровье монстра ${monster.name} - ${healthMonster}%!")
    println("${monster.getAttack()} - урон монстра!")
    println("${monster.getDeffese()} - защита монстра!")
    println("=========================================")


    println("Начать игру?")
    println("1 - Да")
    println("0 - Выход из игры")

    val commandNumber = readlnOrNull()?.toInt() ?: 0

    when (commandNumber) {
        1 -> {
            playGame(player, monster)
        }
        0 -> {
            println("Игра окончена!")
            return
        } // выход
    }
    showMenu()
}

fun playGame(player: Player, monster: Monster) {
    val game = Game(player, monster)
    game.createGame()
}

private fun showMenu() {
    println("Попробовать еще раз?")
    println("1 - Да")
    println("0 - Выход из игры")
    val commandNumber = readlnOrNull()?.toInt() ?: 0

    when (commandNumber) {
        1 -> {
            startGame()
        }

        0 -> {
            return
        }// выход
    }
}


// написать сценарий хода игрока
//игрок начинает игру и вступает в бой
//пока у игрока здоровье 100 % он не может выбрать команду лечиться
//игрок или монстр бросают кубик
//(по возможности)если выпадает 1-4 то существо наносит урон, но противник применяет защиту и урон уменьшается
//если выпадает 5-6 то существо пробивает защиту и наносит больше урона противнику
//наступает очередь противника бросать кубик
//выпадает 1-4 существо ноносит урон, пративник применяет защиту
//выпадает 5-6и существо наносит урон пробивая защиту
//заканчивается ход и игроку предлагается опять бросить кубик или выбрать лечение
//если выбирается кубик то повторяются действия существ
//если выбирается команда лечиться то игрок может востоновить здоровье на 40% от текущего нынешнего если оно ментше 100%
//персонаж выпивает элексир когда лечиться
//игрок не может восстановить здоровье больше чем было изначально
//если игрок восстановил здоровье то ему опять предлагается бросить кубик или востановить еще здоровье
//когда лимит востановлений закончился то игрок должен продолжать бой и каждый ход бросать кубик
//если монстр умирает то программа выводит поздравления
//если игрок умирает то программа выводжит насмешку над героем("Вы побеждены, убиты и съедены! Слышите? Вы мертвее мертвого")
//при любом исходе выводться сообщение что можно попробовать еще раз
//игра завершается

fun hodPlayer(){}
fun hodMonster(){}

// написать функцию восстановления здоровья у игрока на 30%
// хранить в игроке количество восстановлений и убавлять их
// написать в игроке фунцию проверки здоровья ( если здоровье 0 - применяем восстановлени если меньше 4 раз игрок был восстановлен)





